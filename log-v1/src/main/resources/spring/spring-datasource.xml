<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/aop 
	   http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/util 
	   http://www.springframework.org/schema/util/spring-util.xsd
	   http://www.springframework.org/schema/tx 
	   http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context.xsd"
	   default-lazy-init="true" >
	   
	 <aop:aspectj-autoproxy proxy-target-class="true" />
    <!-- enable database annotation aop -->
    <!-- 
    <bean id="dataSourceAspect" class="cn.sh.ideal.servlet.aspect.DataSourceAspect" />
    -->
    
	<!-- For jdbc mail settings and future properties files -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<!-- 
				<value>classpath:mail.properties</value>
				<value>classpath:hibernate.properties</value>
				 -->
			</list>
		</property>
	</bean>
	
	<!-- 基本数据源配置 -->
	<bean id="BaseDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${druid.initialSize}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${druid.maxActive}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${druid.minIdle}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${druid.maxWait}" />
		<!-- 超过时间限制是否回收 -->
		<property name="removeAbandoned" value="${druid.removeAbandoned}" />
		<!-- 超过时间限制多长； -->
		<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
		<!-- 申请连接的时候检测 -->
		<property name="testWhileIdle" value="${druid.testWhileIdle}" />
		<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
		<property name="testOnBorrow" value="${druid.testOnBorrow}" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
		<property name="testOnReturn" value="${druid.testOnReturn}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
		<!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
		<property name="validationQuery" value="${druid.validationQuery}" />
	</bean>
	<!-- 主数据源 -->
	<bean id="masterDataSource" parent="BaseDataSource">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${mysql.jdbc.master.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
	</bean>
	<!-- 从数据源 -->
	<!-- 
	<bean id="salveDataSource" parent="BaseDataSource">
		<property name="url" value="${mysql.jdbc.salve.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
	</bean>
	
	<bean id="dataSourceRouter" class="cn.sh.ideal.jdbc.datasource.router.DynamicDataSource">
		<property name="defaultTargetDataSource" ref="masterDataSource" />
		<property name="targetDataSources">
			<map key-type="cn.sh.ideal.jdbc.datasource.router.DataSourceType">
				<entry key="MASTER" value-ref="masterDataSource" />
				<entry key="SALVE" value-ref="salveDataSource" />
			</map>
		</property>
	</bean>
    -->
	<bean id="dataSource" class="cn.sh.ideal.jdbc.datasource.DataSourceFactoryBean">
		<property name="debug" value="${debug}" />
		<property name="dataSource" ref="masterDataSource" />
	</bean>
</beans>